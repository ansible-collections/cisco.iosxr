---
- ansible.builtin.debug:
    msg: Start iosxr_ospfv3 deleted integration tests ansible_connection={{ ansible_connection }}

- ansible.builtin.include_tasks: _remove_config.yaml

- ansible.builtin.include_tasks: _populate_config.yaml

- block:
    - name: Delete single OSPF process network
      register: result
      cisco.iosxr.iosxr_ospfv3: &id001
        config:
          processes:
            - process_id: 10
            - process_id: 26
            - process_id: 27
            - process_id: 30
        state: deleted

    - name: Assert that the before dicts were correctly generated
      ansible.builtin.assert:
        that:
          - "{{ replaced['before'] == result['before'] }}"

    - name: Assert that the correct set of commands were generated
      ansible.builtin.assert:
        that:
          - "{{ deleted['commands'] | symmetric_difference(result['commands']) |length == 0 }}"

    - name: Assert that the after dicts were correctly generated
      ansible.builtin.assert:
        that:
          - "{{ {} == result['after'] }}"

    - name: Delete a single OSPF process (idempotent)
      register: result
      cisco.iosxr.iosxr_ospfv3: *id001
    - ansible.builtin.assert: &id003
        that:
          - result.changed == false
          - result.commands|length == 0

    - ansible.builtin.include_tasks: _populate_config.yaml

    - name: Delete all OSPF processes
      register: result
      cisco.iosxr.iosxr_ospfv3: &id002
        state: deleted

    - name: Assert that the before dicts were correctly generated
      ansible.builtin.assert:
        that:
          - "{{ replaced['before'] ==  result['before'] }}"

    - name: Assert that the correct set of commands were generated
      ansible.builtin.assert:
        that:
          - "{{ deleted['commands'] | symmetric_difference(result['commands']) |length == 0 }}"

    - name: Assert that the after dicts were correctly generated
      ansible.builtin.assert:
        that:
          - "{{ {} ==  result['after'] }}"

    - name: Delete all  OSPF processes (idempotent)
      register: result
      cisco.iosxr.iosxr_ospfv3: *id002
    - name: Assert that the previous task was idempotent
      ansible.builtin.assert: *id003
    - name: Assert that the before dicts were correctly generated
      ansible.builtin.assert:
        that:
          - "{{ {} == result['before'] }}"
  always:
    - ansible.builtin.include_tasks: _remove_config.yaml
