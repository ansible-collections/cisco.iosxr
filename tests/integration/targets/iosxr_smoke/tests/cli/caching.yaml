---
- block:
  - debug: msg="START connection={{ ansible_connection }} cli/caching.yaml"

  - name: Remove interfaces from config before actual testing
    ignore_errors: true
    cisco.iosxr.iosxr_config: &rem
      lines:
        - no interface GigabitEthernet 0/0/0/1
        - no interface GigabitEthernet 0/0/0/2
        - no interface GigabitEthernet 0/0/0/4
      match: none

  # We need to do this because of a bug in iosxr_interfaces module
  # https://github.com/ansible-collections/cisco.iosxr/issues/106
  - name: Add back interfaces to config before actual testing
    ignore_errors: true
    cisco.iosxr.iosxr_config:
      lines: shutdown
      parents: "interface GigabitEthernet {{ intf }}"
      match: none
    with_items:
      - "0/0/0/1"
      - "0/0/0/2"
      - "0/0/0/4"
    loop_control:
      loop_var: intf

  - name: Merge base interfaces configuration
    register: result
    cisco.iosxr.iosxr_interfaces: &merged
      config:
        - name: GigabitEthernet0/0/0/1
          description: Configured by Ansible
          mtu: 110
          enabled: true
          duplex: half

        - name: GigabitEthernet0/0/0/2
          description: Configured by Ansible
          mtu: 2800
          speed: 100
          enabled: true
          duplex: full
      state: merged

  - assert:
      that:
        - '"interface GigabitEthernet0/0/0/1" in result.commands'
        - '"description Configured by Ansible" in result.commands'
        - '"mtu 110" in result.commands'
        - '"duplex half" in result.commands'
        - '"no shutdown" in result.commands'
        - '"interface GigabitEthernet0/0/0/2" in result.commands'
        - '"description Configured by Ansible" in result.commands'
        - '"mtu 2800" in result.commands'
        - '"speed 100" in result.commands'
        - '"duplex full" in result.commands'
        - '"no shutdown" in result.commands'
        - result.commands|length == 11

  - name: Merge base interfaces configuration (IDEMPOTENT)
    register: result
    cisco.iosxr.iosxr_interfaces: *merged

  - assert:
      that:
        - result.changed == False

  - name: Merge L2 interfaces configuration
    register: result
    cisco.iosxr.iosxr_l2_interfaces: &mergedl2
      config:
        - name: GigabitEthernet0/0/0/1
          l2transport: true
          l2protocol:
            - cpsv: drop
          propagate: true

        - name: GigabitEthernet0/0/0/4.1
          encapsulation:
            dot1q: 20
            second_dot1q: 40

      state: merged

  - assert:
      that:
        - '"interface GigabitEthernet0/0/0/1" in result.commands'
        - '"l2transport l2protocol cpsv drop" in result.commands'
        - '"l2transport propagate remote-status" in result.commands'
        - '"interface GigabitEthernet0/0/0/4.1" in result.commands'
        - '"encapsulation dot1q 20 second-dot1q 40" in result.commands'
        - result.commands|length == 5

  - name: Merge L2 interfaces configuration (IDEMPOTENT)
    register: result
    cisco.iosxr.iosxr_l2_interfaces: *mergedl2

  - assert:
      that:
        - result.changed == False

  - name: Merge L3 interfaces configuration
    register: result
    cisco.iosxr.iosxr_l3_interfaces: &mergedl3
      config:
        - name: GigabitEthernet0/0/0/2
          ipv4:
            - address: 198.51.100.1/24
      state: merged

  - assert:
      that:
        - '"interface GigabitEthernet0/0/0/2" in result.commands'
        - '"ipv4 address 198.51.100.1 255.255.255.0" in result.commands'
        - result.commands|length == 2

  - name: Merge L3 interfaces configuration (IDEMPOTENT)
    register: result
    cisco.iosxr.iosxr_l3_interfaces: *mergedl3

  - assert:
      that:
        - result.changed == False

  always:
    - name: cleanup
      cisco.iosxr.iosxr_config: *rem
  when: ansible_connection == "ansible.netcommon.network_cli" and ansible_network_single_user_mode|d(False)
